<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on dcebotarenco</title>
    <link>https://dcebotarenco.github.io/posts/</link>
    <description>Recent content in Posts on dcebotarenco</description>
    <image>
      <url>https://dcebotarenco.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://dcebotarenco.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Jul 2022 17:02:01 +0300</lastBuildDate><atom:link href="https://dcebotarenco.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>🔥 High CPU usage on faulty endpoint</title>
      <link>https://dcebotarenco.github.io/posts/high-cpu-usage-while-loop/</link>
      <pubDate>Fri, 01 Jul 2022 17:02:01 +0300</pubDate>
      
      <guid>https://dcebotarenco.github.io/posts/high-cpu-usage-while-loop/</guid>
      <description>🧑‍🎓 tltr Infinite while loop was causing the issue. Write unit tests. Test the exit condition of your while loops.
🐛 Issue We had some kind of serious performance issue on production. The CPU periodically was pegged at 100% and stayed that way until we restarted the Tomcat. It was degrading the overall site performance for quite a while. We had two instances with peak similarly in CPU. Seems like it must be something inside the Tomcat since that&amp;rsquo;s what is eating the CPU.</description>
    </item>
    
    <item>
      <title>🍃 Spring WebClient &amp; Connection Pool</title>
      <link>https://dcebotarenco.github.io/posts/reactor-connection-pool/</link>
      <pubDate>Wed, 29 Jun 2022 09:37:22 +0300</pubDate>
      
      <guid>https://dcebotarenco.github.io/posts/reactor-connection-pool/</guid>
      <description>🧑‍🎓 tltr Configure evictInBackground, maxIdleTime and maxLifeTime to clear connections from the connection pool or retry the call or use RestTemplate
🐛 Issue At one of my clients, it was decided no more RestTemplate, all move to 🍃 Spring WebClient. I consider this project very interesting, but it comes with a different mindset which developers do not pay attention to:
Non-blocking Event driven Connection pool Back to the client. After each deployment, in a matter of days, we were getting - the connection reset by the peer.</description>
    </item>
    
  </channel>
</rss>
