<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on dcebotarenco</title>
    <link>https://dcebotarenco.github.io/posts/</link>
    <description>Recent content in Posts on dcebotarenco</description>
    <image>
      <title>dcebotarenco</title>
      <url>https://dcebotarenco.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://dcebotarenco.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 30 Jun 2023 22:10:52 +0300</lastBuildDate><atom:link href="https://dcebotarenco.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Testing Value Patterns</title>
      <link>https://dcebotarenco.github.io/posts/value-patterns/</link>
      <pubDate>Fri, 30 Jun 2023 22:10:52 +0300</pubDate>
      
      <guid>https://dcebotarenco.github.io/posts/value-patterns/</guid>
      <description>tltr Move away from literals if possible. Divert and generate values.
How do we specify the values to be used in tests? The values assigned to the attributes of objects in our test fixture and the expected outcome of our test are frequently interconnected, as defined in the requirements. It is vital to accurately determine these values and understand the relationship between the pre-conditions and post-conditions. This relationship plays a critical role in ensuring the correct behavior is incorporated into the System Under Test (SUT).</description>
    </item>
    
    <item>
      <title>Fixture Strategy Management</title>
      <link>https://dcebotarenco.github.io/posts/fixture-strategy-management/</link>
      <pubDate>Wed, 28 Jun 2023 21:23:48 +0300</pubDate>
      
      <guid>https://dcebotarenco.github.io/posts/fixture-strategy-management/</guid>
      <description>tltr Refactor code from testcase by class to testcase by fixture
My opinion based on references:
xUnit Test Patterns book by Gerard Meszaros Test Drive Development: By Example by Kent Beck. Growing Object-Oriented Software, Guided by Tests by Steve Freeman, Nat Pryce Object Mother ObjectMother - Easing Test Object Creation in XP The post contains text snippets from books.
Testcase Class per what? - Fixture Strategy Management How do we organize our Test Methods onto Testcase Classes?</description>
    </item>
    
    <item>
      <title>General Fixture</title>
      <link>https://dcebotarenco.github.io/posts/general-fixture/</link>
      <pubDate>Sat, 10 Jun 2023 21:23:48 +0300</pubDate>
      
      <guid>https://dcebotarenco.github.io/posts/general-fixture/</guid>
      <description>tltr Build Minimal.
My opinion based on references:
xUnit Test Patterns book by Gerard Meszaros Test Drive Development: By Example by Kent Beck. Growing Object-Oriented Software, Guided by Tests by Steve Freeman, Nat Pryce Object Mother ObjectMother - Easing Test Object Creation in XP The post contains text snippets from books.
Let&amp;rsquo;s define &amp;lsquo;fixture&amp;rsquo; The test fixture is everything we need to have to set up in order to exercise the SUT.</description>
    </item>
    
    <item>
      <title>‚õÖ Hazelcast in minikube</title>
      <link>https://dcebotarenco.github.io/posts/hazelcast-in-minikube/</link>
      <pubDate>Wed, 09 Nov 2022 19:00:00 +0200</pubDate>
      
      <guid>https://dcebotarenco.github.io/posts/hazelcast-in-minikube/</guid>
      <description>Build a Spring-boot Hazelcast cluster in Kubernetes For local testing purposes, you might want to have a cluster of microservices that use Hazelcast where you can watch the replication, rollout of pods and test some Kubernetes infrastructure-related changes.
Prerequisites Docker minikube kubectl helm minikube Dashboard or Lens Goal Deploy a spring-boot hazelcast cluster locally using helm and connect to it via hazelcast management center Isolate the POC in a separate environment and play with the same microservices and Hazelcast upgrades Limitations We cannot push to any cloud image registries like Azure Container Registry, say it&amp;rsquo;s forbidden by the security policy.</description>
    </item>
    
    <item>
      <title>ü™§ Peek &amp; Filter Stream API</title>
      <link>https://dcebotarenco.github.io/posts/stream-api-question/</link>
      <pubDate>Tue, 16 Aug 2022 10:15:24 +0300</pubDate>
      
      <guid>https://dcebotarenco.github.io/posts/stream-api-question/</guid>
      <description>üßë‚Äçüéì tltr 1 1234 Print is executed multiple times till the first value that matches both filter conditions is found.
‚ùìQuestion 1 2 3 4 5 6 //What is the output? IntStream.range(1, 10) .peek(System.out::print) .filter(i -&amp;gt; i &amp;gt; 2) //A .filter(i -&amp;gt; i &amp;gt; 3) //B .findFirst(); üïµÔ∏è‚Äç‚ôÇÔ∏è Explanation Let&amp;rsquo;s simplify it
1 IntStream.range(1, 10); This won&amp;rsquo;t do anything because there is no terminal operation which triggers the reading from the source stream.</description>
    </item>
    
    <item>
      <title>üî• High CPU usage on faulty endpoint</title>
      <link>https://dcebotarenco.github.io/posts/high-cpu-usage-while-loop/</link>
      <pubDate>Fri, 01 Jul 2022 17:02:01 +0300</pubDate>
      
      <guid>https://dcebotarenco.github.io/posts/high-cpu-usage-while-loop/</guid>
      <description>üßë‚Äçüéì tltr Infinite while loop was causing the issue. Write unit tests. Test the exit condition of your while loops.
üêõ Issue We had some kind of serious performance issue on production. The CPU periodically was pegged at 100% and stayed that way until we restarted the Tomcat. It was degrading the overall site performance for quite a while. We had two instances with peak similarly in CPU. Seems like it must be something inside the Tomcat since that&amp;rsquo;s what is eating the CPU.</description>
    </item>
    
    <item>
      <title>üçÉ Spring WebClient &amp; Connection Pool</title>
      <link>https://dcebotarenco.github.io/posts/reactor-connection-pool/</link>
      <pubDate>Wed, 29 Jun 2022 09:37:22 +0300</pubDate>
      
      <guid>https://dcebotarenco.github.io/posts/reactor-connection-pool/</guid>
      <description>üßë‚Äçüéì tltr Configure evictInBackground, maxIdleTime and maxLifeTime to clear connections from the connection pool or retry the call or use RestTemplate
üêõ Issue At one of my clients, it was decided no more RestTemplate, all move to üçÉ Spring WebClient. I consider this project very interesting, but it comes with a different mindset which developers do not pay attention to:
Non-blocking Event driven Connection pool Back to the client. After each deployment, in a matter of days, we were getting - the connection reset by the peer.</description>
    </item>
    
    <item>
      <title>üß∞ Nsis vs Python</title>
      <link>https://dcebotarenco.github.io/posts/nsis-vs-python/</link>
      <pubDate>Wed, 01 Mar 2017 18:38:19 +0200</pubDate>
      
      <guid>https://dcebotarenco.github.io/posts/nsis-vs-python/</guid>
      <description>All companies have a delivery pipeline of the product. Every company can create its own pipeline and choose any strategy to deliver. In this post I‚Äôm going to talk about NSIS and Python. I had a task to think about the product deployment in the company I‚Äôm working for. Before I got this task, we used to copy paste files via RDP and VPN to the client server and install them manually.</description>
    </item>
    
    <item>
      <title>üí™ Power of Bash</title>
      <link>https://dcebotarenco.github.io/posts/power-of-bash/</link>
      <pubDate>Mon, 27 Feb 2017 20:11:06 +0200</pubDate>
      
      <guid>https://dcebotarenco.github.io/posts/power-of-bash/</guid>
      <description>We all tend to do our work faster because time costs money. I realized that we lose a lot of time waiting for IDE to start. I use Netbeans IDE and all our work is related to it. For Java modules, we use Maven and, of course, we have some custom goals. Some goals are pure Java, though we have some goals that use SVN for committing, logging, reverting and so on.</description>
    </item>
    
    <item>
      <title>ü§ñ Skype bot</title>
      <link>https://dcebotarenco.github.io/posts/skype-bot/</link>
      <pubDate>Tue, 07 Feb 2017 09:37:22 +0300</pubDate>
      
      <guid>https://dcebotarenco.github.io/posts/skype-bot/</guid>
      <description>Intro Once I read a post about a guy who was searching for an apartment in San Francisco. He was annoyed about the fact that searching for ‚ÄúHow to find an apartment in San Francisco‚Äù on Google yields dozens of pages of advice as a good indicator of apartment hunting and this is a painful process.
So he decided to implement a bot in Slack that would help him to search an apartment based on scraping data from websites and notifying him about the cheapest and closest apartment around him.</description>
    </item>
    
  </channel>
</rss>
